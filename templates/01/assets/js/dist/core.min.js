/*! starter-project - v1.0.0 - 2016-01-21 */
!function($){$(document).on("ready",function(){window.page=new Page}),Page=function(){new EqualHeightGroups;$("input, textarea").placeholder(),this.initValidation()},Page.prototype.initValidation=function(){$("form.validate").parsley({trigger:"change",errorClass:"has-error",successClass:"has-success",errorsMessagesDisabled:!0,trimValue:!0,validationThreshold:3,classHandler:function(field){var tagName=(field.$element.prop("tagName")||"").toLowerCase(),type=(field.$element.attr("type")||"").toLowerCase();return"radio"!=type&&"checkbox"!=type&&"textarea"!=tagName&&(field.$element.after('<i class="fa fa-check form-control-feedback feedback-success" aria-hidden="true"></i><i class="fa fa-remove form-control-feedback feedback-error" aria-hidden="true"></i>'),field.$element.parents(".form-group").eq(0).addClass("has-feedback")),field.$element.parents(".form-group").eq(0)},errorsContainer:function(field){return field.$element.parents(".form-group").eq(0)}})},EqualHeightGroups=function(wrap,opts){if(this.opts=$.extend({},EqualHeightGroups.defaults,opts||{}),this.wrap=wrap||$("body"),this.wrap.find("[data-height-group]").length){var groups={};this.wrap.find("[data-height-group]").each(function(){var groupId=$(this).attr("data-height-group");groups.hasOwnProperty(groupId)||(groups[groupId]=$('[data-height-group="'+groupId+'"]'))}),this.groups=groups,$(window).on("load resize",$.proxy(this.onResize,this)),this.onResize()}},EqualHeightGroups.defaults={},EqualHeightGroups.prototype.processGroup=function(groupId){var group=this.groups[groupId].height("auto"),lines={};group.each(function(i,el){var cPos=$(el).offset().top+"";lines.hasOwnProperty(cPos)||(lines[cPos]=[]),lines[cPos].push(el)});for(var p in lines){var line=$(lines[p]).map(function(){return $(this).toArray()}),maxHeight=Math.max.apply(null,line.map(function(){return $(this).height()}).get());line.height(maxHeight)}},EqualHeightGroups.prototype.onResize=function(){if(1==this.throttleResize)return void this.resizeAttempts++;for(var p in this.groups)this.processGroup(p);this.throttleResize=!0,this.resizeAttempts=0,clearTimeout(this.resizeTimeout||null),setTimeout($.proxy(function(){this.throttleResize=!1,this.resizeAttempts>0&&this.onResize()},this),500)}}(jQuery);
//# sourceMappingURL=core.min.map